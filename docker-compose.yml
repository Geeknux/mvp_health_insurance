version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: health_insurance_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-health_insurance}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - health_insurance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (Django + FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: health_insurance_backend
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'Database is ready!' &&
        cd django_app &&
        python manage.py migrate &&
        cd ../fastapi_app &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-health_insurance}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-dev-key}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-dev-key}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - health_insurance_network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: health_insurance_frontend
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-سامانه بیمه تکمیلی سلامت}
    depends_on:
      - backend
    networks:
      - health_insurance_network

volumes:
  postgres_data:
    driver: local

networks:
  health_insurance_network:
    driver: bridge